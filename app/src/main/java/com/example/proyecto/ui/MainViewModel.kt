package com.example.proyecto.ui // <<<< ENSURE THIS IS THE PACKAGE

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.example.proyecto.data.model.Transaction
import com.example.proyecto.data.repository.TransactionRepository
import kotlinx.coroutines.flow.SharingStarted
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.flow.map // Make sure this import is present
import kotlinx.coroutines.flow.stateIn
import kotlinx.coroutines.launch

class MainViewModel(private val transactionRepository: TransactionRepository) : ViewModel() {

    // Renamed from 'repository' to 'transactionRepository' for clarity as used in constructor
    val allTransactions: StateFlow<List<Transaction>> =
        transactionRepository.allTransactions // Assuming allTransactions is the correct name in your repository
            .stateIn(
                scope = viewModelScope,
                started = SharingStarted.WhileSubscribed(5000L), // Explicitly Long
                initialValue = emptyList()
            )

    val ingresos: StateFlow<List<Transaction>> = allTransactions
        .map { transactions ->
            transactions.filter { it.tipo == "Ingreso" }
        }
        .stateIn(
            scope = viewModelScope,
            started = SharingStarted.WhileSubscribed(5000L), // Explicitly Long
            initialValue = emptyList()
        )

    val gastos: StateFlow<List<Transaction>> = allTransactions
        .map { transactions ->
            transactions.filter { it.tipo == "Gasto" }
        }
        .stateIn(
            scope = viewModelScope,
            started = SharingStarted.WhileSubscribed(5000L), // Explicitly Long
            initialValue = emptyList()
        )

    fun addTransaction(tipo: String, categoria: String, fecha: Long, monto: Double, descripcion: String) {
        viewModelScope.launch {
            val newTransaction = Transaction(
                tipo = tipo,
                categoria = categoria,
                fecha = fecha,
                monto = monto,
                descripcion = descripcion
                // id will be auto-generated by Room
            )
            transactionRepository.insertTransaction(newTransaction) // Assuming this is the correct method name
        }
    }
}